/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.ControladorNU;
import Controlador.ControladorPrincipal;
import Controlador.HiloDisparoNU;
import Controlador.HiloLaserEnemys;
import Controlador.HiloMovimientoPowerUps;
import Controlador.HiloMoviminetoEnemigoNU;
import Controlador.HiloPrincipalNU;
import Modelo.AreaJuegoNU;
import javax.swing.ImageIcon;

/**
 *
 * @author Jason
 */
public class GUINU extends javax.swing.JFrame {

    private ControladorPrincipal controlP;
    private ControladorNU control;

    private AreaJuegoNU areaj;

    private HiloMoviminetoEnemigoNU hiloME;
    private HiloDisparoNU hiloD;
    private HiloPrincipalNU hiloP;
    private HiloMovimientoPowerUps hiloMP;
    private HiloLaserEnemys hiloL;
    
    /**
     * Creates new form GUINU
     */
    public GUINU(ControladorPrincipal controlP) {
        initComponents();
        control = new ControladorNU(panelNU1, this, controlP);

        this.addKeyListener(control);
        panelNU1.escucharTeclas(control);
        panelNU1.setControlador(control);

        areaj = control.getAreaJuego();

    }

    public PanelNU getPanel() {
        return panelNU1;
    }

    public ControladorNU getControlNU() {
        return control;
    }

    public void iniciarHilos() {  //EL INICIAR HILO VIENE BIEN PARA CREAR LA REFERENCIA A ESTA CLASE EN EL EL CONSTRUCTOR DE CONTROLADOR PRINCIPAL Y LLAMAR ESTE METODO EN EL ACTION PERFORMED CUANDO APAREZCA EL NIVEL
        hiloME = new HiloMoviminetoEnemigoNU(panelNU1, areaj, controlP);
        hiloD = new HiloDisparoNU(areaj, panelNU1);
        hiloP = new HiloPrincipalNU(panelNU1, areaj.getCorn(), areaj);
        hiloMP = new HiloMovimientoPowerUps(areaj, panelNU1);
        hiloL = new HiloLaserEnemys(areaj);

        hiloME.start();
        hiloD.start();
        hiloP.start();
        hiloMP.start();
        hiloL.start();
        
    }

    public void detenerHilosMuGa() {
        hiloL.stop();
        hiloMP.stop();
        hiloP.stop();
        hiloD.stop();
    }
    
    public void detenerHilosSalir() {
        hiloL.stop();
        hiloMP.stop();
        hiloP.stop();
        hiloD.stop();
        hiloME.stop();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelNU1 = new Vista.PanelNU();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelNU1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelNU1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Vista.PanelNU panelNU1;
    // End of variables declaration//GEN-END:variables
}
